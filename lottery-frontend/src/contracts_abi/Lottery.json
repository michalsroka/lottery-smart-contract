{
  "contractName": "Lottery",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "better",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "description",
          "type": "string"
        }
      ],
      "name": "newOraclizeQuery",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "description",
          "type": "string"
        }
      ],
      "name": "gotOraclizeQuery",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_betNumbers",
          "type": "string"
        }
      ],
      "name": "bet",
      "outputs": [
        {
          "name": "succeeded",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getWinningNumbers",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.25+commit.59dbf8f1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"myid\",\"type\":\"bytes32\"},{\"name\":\"result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"myid\",\"type\":\"bytes32\"},{\"name\":\"result\",\"type\":\"string\"},{\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"better\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_betNumbers\",\"type\":\"string\"}],\"name\":\"bet\",\"outputs\":[{\"name\":\"succeeded\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getWinningNumbers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"description\",\"type\":\"string\"}],\"name\":\"newOraclizeQuery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"description\",\"type\":\"string\"}],\"name\":\"gotOraclizeQuery\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/michal/git/lottery-smart-contract/LotteryContract/contracts/Lottery.sol\":\"Lottery\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/michal/git/lottery-smart-contract/LotteryContract/contracts/Lottery.sol\":{\"keccak256\":\"0xd5c1db65874e3b020d4a52c116d043ac8bdf6e574df0754730e104af24d040cc\",\"urls\":[\"bzzr://87b1f8afd9a28343197922dd40822b90b5a33a883a3be63b9f9c7745efb5b5b6\"]},\"/home/michal/git/lottery-smart-contract/LotteryContract/contracts/usingOraclize.sol\":{\"keccak256\":\"0x6e98b8463ad910cdcc266bbfcca4081695ec0cc47bbe9ed2266d55f5bab1436d\",\"urls\":[\"bzzr://80713e365bacd1d0b5154131834a89881028a5267a41e8878ca43e4955ff3ca5\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611717806100746000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327dc297e1461007257806338bbfa50146100e9578063718c7d44146101a657806374030531146101fd57806384350e1d14610271575b600080fd5b34801561007e57600080fd5b506100e76004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610288565b005b3480156100f557600080fd5b506101a46004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061031a565b005b3480156101b257600080fd5b506101bb61031f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610257600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610345565b604051808215151515815260200191505060405180910390f35b34801561027d57600080fd5b50610286610486565b005b7fda2ceecbf0a68301143a220d1af7a2f12223ee02b6b00bbff5174e8069f6caa260405180806020018281038252602c8152602001807f476f74206f7261636c697a6520717565727920616e642063616c6c6261636b2081526020017f697320657865637574656421000000000000000000000000000000000000000081525060400191505060405180910390a15050565b505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008067016345785d8a0000341480151561035f57600080fd5b338260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838260010190805190602001906103ba9291906115bf565b50600782908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820181600101908054600181600116156101000203166002900461047792919061163f565b50505050600192505050919050565b3073ffffffffffffffffffffffffffffffffffffffff16316104dc6040805190810160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506106c8565b111561059b577f46cb989ef9cef13e930e3b7f286225a086e716a90d63e0b7da85d310a9db0c9a60405180806020018281038252604b8152602001807f4f7261636c697a6520717565727920776173204e4f542073656e742c20706c6581526020017f6173652061646420736f6d652045544820746f20636f76657220666f7220746881526020017f652071756572792066656500000000000000000000000000000000000000000081525060600191505060405180910390a16106c6565b7f46cb989ef9cef13e930e3b7f286225a086e716a90d63e0b7da85d310a9db0c9a6040518080602001828103825260358152602001807f4f7261636c697a65207175657279207761732073656e742c207374616e64696e81526020017f6720627920666f722074686520616e737765722e2e000000000000000000000081525060400191505060405180910390a16106c46040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250606060405190810160405280602981526020017f6a736f6e28687474703a2f2f3132372e302e302e313a353030302f6c75636b7981526020017f5f6e756d62657273290000000000000000000000000000000000000000000000815250610a98565b505b565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610738575060006107366000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661103a565b145b15610749576107476000611045565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156107ce57600080fd5b505af11580156107e2573d6000803e3d6000fd5b505050506040513d60208110156107f857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610960576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156108e457600080fd5b505af11580156108f8573d6000803e3d6000fd5b505050506040513d602081101561090e57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a0a5780820151818401526020810190506109ef565b50505050905090810190601f168015610a375780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610a5657600080fd5b505af1158015610a6a573d6000803e3d6000fd5b505050506040513d6020811015610a8057600080fd5b81019080805190602001909291905050509050919050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610b0a57506000610b086000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661103a565b145b15610b1b57610b196000611045565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610ba057600080fd5b505af1158015610bb4573d6000803e3d6000fd5b505050506040513d6020811015610bca57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610d32576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610cb657600080fd5b505af1158015610cca573d6000803e3d6000fd5b505050506040513d6020811015610ce057600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ddc578082015181840152602081019050610dc1565b50505050905090810190601f168015610e095780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610e2857600080fd5b505af1158015610e3c573d6000803e3d6000fd5b505050506040513d6020811015610e5257600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115610e885760006001029150611033565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610f40578082015181840152602081019050610f25565b50505050905090810190601f168015610f6d5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610fa6578082015181840152602081019050610f8b565b50505050905090810190601f168015610fd35780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b158015610ff457600080fd5b505af1158015611008573d6000803e3d6000fd5b50505050506040513d602081101561101f57600080fd5b810190808051906020019092919050505091505b5092915050565b6000813b9050919050565b600061104f611056565b9050919050565b600080611076731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed61103a565b111561111757731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061110e6040805190810160405280600b81526020017f6574685f6d61696e6e65740000000000000000000000000000000000000000008152506115a5565b600190506115a2565b600061113673c03a2615d5efaf5f49f60b7bb6583eaec212fdf161103a565b11156111d75773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506111ce6040805190810160405280600c81526020017f6574685f726f707374656e3300000000000000000000000000000000000000008152506115a5565b600190506115a2565b60006111f673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e61103a565b11156112975773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061128e6040805190810160405280600981526020017f6574685f6b6f76616e00000000000000000000000000000000000000000000008152506115a5565b600190506115a2565b60006112b673146500cfd35b22e4a392fe0adc06de1a1368ed4861103a565b11156113575773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061134e6040805190810160405280600b81526020017f6574685f72696e6b6562790000000000000000000000000000000000000000008152506115a5565b600190506115a2565b600061137673a2998efd205fb9d4b4963afb70778d6354ad3a4161103a565b11156114175773a2998efd205fb9d4b4963afb70778d6354ad3a416000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061140e6040805190810160405280600a81526020017f6574685f676f65726c69000000000000000000000000000000000000000000008152506115a5565b600190506115a2565b6000611436736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47561103a565b111561149957736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506115a2565b60006114b87320e12a1f859b3feae5fb2a0a32c18f5a65555bbf61103a565b111561151b577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506115a2565b600061153a7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa61103a565b111561159d577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506115a2565b600090505b90565b80600290805190602001906115bb9291906115bf565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061160057805160ff191683800117855561162e565b8280016001018555821561162e579182015b8281111561162d578251825591602001919060010190611612565b5b50905061163b91906116c6565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061167857805485556116b5565b828001600101855582156116b557600052602060002091601f016020900482015b828111156116b4578254825591600101919060010190611699565b5b5090506116c291906116c6565b5090565b6116e891905b808211156116e45760008160009055506001016116cc565b5090565b905600a165627a7a72305820cabbaeecd17cd0cbc8ce238343442845704c457c837dd7773a13a151467f06040029",
  "deployedBytecode": "",
  "sourceMap": "56:1457:0:-;;;471:107;8:9:-1;5:2;;;30:1;27;20:12;5:2;471:107:0;528:42;500:3;;:71;;;;;;;;;;;;;;;;;;56:1457;;;;;;",
  "deployedSourceMap": "56:1457:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1371:139;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1371:139:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14235:172:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14235:172:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;96:21:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;96:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;584:352;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;942:423;;8:9:-1;5:2;;;30:1;27;20:12;5:2;942:423:0;;;;;;1371:139;1439:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1371:139;;:::o;14235:172:2:-;;;;:::o;96:21:0:-;;;;;;;;;;;;;:::o;584:352::-;708:14;738:29;664:9;650;:24;436:10;428:19;;;;;;;;808:10;777:14;:28;;;:41;;;;;;;;;;;;;;;;;;859:11;828:14;:28;;:42;;;;;;;;;;;;:::i;:::-;;880:7;893:14;880:28;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;880:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;925:4;918:11;;584:352;;;;;:::o;942:423::-;1031:4;:12;;;1004:24;;;;;;;;;;;;;;;;;;;:17;:24::i;:::-;:39;1000:359;;;1064:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1000:359;;;1195:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1282:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:66::i;:::-;;1000:359;942:423::o;14413:134:2:-;14489:4;11373:1;11367:3;;;;;;;;;;;11359:15;;;11358:49;;;;11405:1;11378:25;11398:3;;;;;;;;;;;11378:11;:25::i;:::-;:28;11358:49;11355:101;;;11421:35;11089:1;11421:19;:35::i;:::-;;11355:101;11491:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11491:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11491:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11491:16:2;;;;;;;;;;;;;;;;11470:37;;11478:8;;;;;;;;;;;11470:37;;;;11467:92;;;11542:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11542:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11542:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11542:16:2;;;;;;;;;;;;;;;;11521:8;;:38;;;;;;;;;;;;;;;;;;11467:92;14511:8;;;;;;;;;;;:17;;;14529:10;14511:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14511:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14511:29:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14511:29:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14511:29:2;;;;;;;;;;;;;;;;14504:36;;14413:134;;;:::o;14718:306::-;14803:10;14824;11373:1;11367:3;;;;;;;;;;;11359:15;;;11358:49;;;;11405:1;11378:25;11398:3;;;;;;;;;;;11378:11;:25::i;:::-;:28;11358:49;11355:101;;;11421:35;11089:1;11421:19;:35::i;:::-;;11355:101;11491:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11491:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11491:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11491:16:2;;;;;;;;;;;;;;;;11470:37;;11478:8;;;;;;;;;;;11470:37;;;;11467:92;;;11542:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11542:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11542:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11542:16:2;;;;;;;;;;;;;;;;11521:8;;:38;;;;;;;;;;;;;;;;;;11467:92;14837:8;;;;;;;;;;;:17;;;14855:10;14837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14837:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14837:29:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14837:29:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14837:29:2;;;;;;;;;;;;;;;;14824:42;;14910:6;14898:11;:18;14888:7;:28;14880:5;:36;14876:50;;;14925:1;14918:8;;;;;;14876:50;14970:8;;;;;;;;;;;:14;;;14991:5;14998:1;15001:10;15013:3;14970:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14970:47:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14970:47:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14970:47:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14970:47:2;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14970:47:2;;;;;;;;;;;;;;;;14963:54;;11570:1;14718:306;;;;;:::o;34519:146::-;34577:10;34643:5;34631:18;34622:27;;34608:51;;;:::o;11683:183::-;11746:4;11766:21;:19;:21::i;:::-;11759:28;;11683:183;;;:::o;11871:2009::-;11919:4;11994:1;11938:55;11950:42;11938:11;:55::i;:::-;:57;11934:245;;;12048:42;12020:3;;:71;;;;;;;;;;;;;;;;;;12105:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;12164:4;12157:11;;;;11934:245;12248:1;12192:55;12204:42;12192:11;:55::i;:::-;:57;12188:254;;;12310:42;12282:3;;:71;;;;;;;;;;;;;;;;;;12367:39;;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;12427:4;12420:11;;;;12188:254;12511:1;12455:55;12467:42;12455:11;:55::i;:::-;:57;12451:249;;;12571:42;12543:3;;:71;;;;;;;;;;;;;;;;;;12628:36;;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;12685:4;12678:11;;;;12451:249;12769:1;12713:55;12725:42;12713:11;:55::i;:::-;:57;12709:253;;;12831:42;12803:3;;:71;;;;;;;;;;;;;;;;;;12888:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;12947:4;12940:11;;;;12709:253;13031:1;12975:55;12987:42;12975:11;:55::i;:::-;:57;12971:251;;;13092:42;13064:3;;:71;;;;;;;;;;;;;;;;;;13149:37;;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;13207:4;13200:11;;;;12971:251;13291:1;13235:55;13247:42;13235:11;:55::i;:::-;:57;13231:201;;;13353:42;13325:3;;:71;;;;;;;;;;;;;;;;;;13417:4;13410:11;;;;13231:201;13501:1;13445:55;13457:42;13445:11;:55::i;:::-;:57;13441:200;;;13562:42;13534:3;;:71;;;;;;;;;;;;;;;;;;13626:4;13619:11;;;;13441:200;13710:1;13654:55;13666:42;13654:11;:55::i;:::-;:57;13650:202;;;13773:42;13745:3;;:71;;;;;;;;;;;;;;;;;;13837:4;13830:11;;;;13650:202;13868:5;13861:12;;11871:2009;;:::o;39980:118::-;40078:13;40054:21;:37;;;;;;;;;;;;:::i;:::-;;39980:118;:::o;56:1457:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.22;\nimport \"./usingOraclize.sol\";\n\ncontract Lottery is usingOraclize {\n    address public better;\n    string winningNumbers;\n\n    struct Better {\n        address betterAddress;\n        string bettedNumbers;\n    }\n\n    Better[] betters;\n    address[] winners;\n\n    event newOraclizeQuery(string description);\n    event gotOraclizeQuery(string description);\n\n    modifier condition(bool _condition) {\n        require(_condition);\n        _;\n    }\n\n    function Lottery() {\n        OAR = OraclizeAddrResolverI(0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475);\n    }\n\n    function bet(string _betNumbers)\n        public\n        condition(msg.value == (0.1 ether))\n        payable\n        returns(bool succeeded)\n    {\n        Better storage _currentBetter;\n        _currentBetter.betterAddress = msg.sender;\n        _currentBetter.bettedNumbers = _betNumbers;\n        betters.push(_currentBetter);\n        return true;\n    }\n\n    function getWinningNumbers()\n        public\n    {\n        if (oraclize_getPrice(\"URL\") > this.balance) {\n            emit newOraclizeQuery(\"Oraclize query was NOT sent, please add some ETH to cover for the query fee\");\n        } else {\n            emit newOraclizeQuery(\"Oraclize query was sent, standing by for the answer..\");\n            oraclize_query(\"URL\", \"json(http://127.0.0.1:5000/lucky_numbers)\");\n        }\n    }\n\n    function __callback(bytes32 myid, string result)\n    {\n        emit gotOraclizeQuery(\"Got oraclize query and callback is executed!\");\n    }\n\n}",
  "sourcePath": "/home/michal/git/lottery-smart-contract/LotteryContract/contracts/Lottery.sol",
  "ast": {
    "absolutePath": "/home/michal/git/lottery-smart-contract/LotteryContract/contracts/Lottery.sol",
    "exportedSymbols": {
      "Lottery": [
        125
      ]
    },
    "id": 126,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".22"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/home/michal/git/lottery-smart-contract/LotteryContract/contracts/usingOraclize.sol",
        "file": "./usingOraclize.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 126,
        "sourceUnit": 6232,
        "src": "25:29:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6231,
              "src": "76:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$6231",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "76:13:0"
          }
        ],
        "contractDependencies": [
          6231
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 125,
        "linearizedBaseContracts": [
          125,
          6231
        ],
        "name": "Lottery",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "better",
            "nodeType": "VariableDeclaration",
            "scope": 125,
            "src": "96:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "96:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8,
            "name": "winningNumbers",
            "nodeType": "VariableDeclaration",
            "scope": 125,
            "src": "123:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "123:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "Lottery.Better",
            "id": 13,
            "members": [
              {
                "constant": false,
                "id": 10,
                "name": "betterAddress",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "175:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "175:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "name": "bettedNumbers",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "206:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 11,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "206:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Better",
            "nodeType": "StructDefinition",
            "scope": 125,
            "src": "151:82:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16,
            "name": "betters",
            "nodeType": "VariableDeclaration",
            "scope": 125,
            "src": "239:16:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Better_$13_storage_$dyn_storage",
              "typeString": "struct Lottery.Better[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 14,
                "name": "Better",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 13,
                "src": "239:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Better_$13_storage_ptr",
                  "typeString": "struct Lottery.Better"
                }
              },
              "id": 15,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "239:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Better_$13_storage_$dyn_storage_ptr",
                "typeString": "struct Lottery.Better[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 19,
            "name": "winners",
            "nodeType": "VariableDeclaration",
            "scope": 125,
            "src": "261:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "261:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 18,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "261:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 23,
            "name": "newOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "308:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "308:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "307:20:0"
            },
            "src": "285:43:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 27,
            "name": "gotOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "356:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "356:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "355:20:0"
            },
            "src": "333:43:0"
          },
          {
            "body": {
              "id": 36,
              "nodeType": "Block",
              "src": "418:47:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 32,
                        "name": "_condition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "436:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 31,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6249,
                        6250
                      ],
                      "referencedDeclaration": 6249,
                      "src": "428:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "428:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "428:19:0"
                },
                {
                  "id": 35,
                  "nodeType": "PlaceholderStatement",
                  "src": "457:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 37,
            "name": "condition",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "name": "_condition",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "401:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "401:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "400:17:0"
            },
            "src": "382:83:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "490:88:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 40,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 890,
                      "src": "500:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$300",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307836663438354338424636666334336541323132453933424246386365303436433766316362343735",
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "528:42:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 41,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 300,
                        "src": "506:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$300_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 43,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "506:65:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$300",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "500:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$300",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "500:71:0"
                }
              ]
            },
            "documentation": null,
            "id": 47,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "Lottery",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "487:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "490:0:0"
            },
            "scope": 125,
            "src": "471:107:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 85,
              "nodeType": "Block",
              "src": "728:208:0",
              "statements": [
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62,
                      "name": "_currentBetter",
                      "nodeType": "VariableDeclaration",
                      "scope": 86,
                      "src": "738:29:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Better_$13_storage_ptr",
                        "typeString": "struct Lottery.Better"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 61,
                        "name": "Better",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 13,
                        "src": "738:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Better_$13_storage_ptr",
                          "typeString": "struct Lottery.Better"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 63,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "738:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 64,
                        "name": "_currentBetter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "777:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Better_$13_storage_ptr",
                          "typeString": "struct Lottery.Better storage pointer"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "betterAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "777:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 67,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6246,
                        "src": "808:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 68,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "808:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "777:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "777:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 71,
                        "name": "_currentBetter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "828:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Better_$13_storage_ptr",
                          "typeString": "struct Lottery.Better storage pointer"
                        }
                      },
                      "id": 73,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "bettedNumbers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "828:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 74,
                      "name": "_betNumbers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "859:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "828:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "828:42:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 80,
                        "name": "_currentBetter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "893:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Better_$13_storage_ptr",
                          "typeString": "struct Lottery.Better storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Better_$13_storage_ptr",
                          "typeString": "struct Lottery.Better storage pointer"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 77,
                        "name": "betters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "880:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Better_$13_storage_$dyn_storage",
                          "typeString": "struct Lottery.Better storage ref[] storage ref"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "880:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Better_$13_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Lottery.Better storage ref) returns (uint256)"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "880:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "880:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "925:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 60,
                  "id": 84,
                  "nodeType": "Return",
                  "src": "918:11:0"
                }
              ]
            },
            "documentation": null,
            "id": 86,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 52,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6246,
                        "src": "650:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "650:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "hexValue": "302e31",
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "664:9:0",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "id": 55,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "663:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      }
                    },
                    "src": "650:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 57,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 51,
                  "name": "condition",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 37,
                  "src": "640:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bool_$",
                    "typeString": "modifier (bool)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "640:35:0"
              }
            ],
            "name": "bet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "name": "_betNumbers",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "597:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "597:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "596:20:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "name": "succeeded",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "708:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "707:16:0"
            },
            "scope": 125,
            "src": "584:352:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "990:375:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1022:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 89,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1166,
                          1184
                        ],
                        "referencedDeclaration": 1166,
                        "src": "1004:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1004:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 92,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6269,
                        "src": "1031:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Lottery_$125",
                          "typeString": "contract Lottery"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1031:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1004:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 109,
                    "nodeType": "Block",
                    "src": "1176:183:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1212:55:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                                "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                                "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 100,
                            "name": "newOraclizeQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23,
                            "src": "1195:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1195:73:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 103,
                        "nodeType": "EmitStatement",
                        "src": "1190:78:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1297:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e28687474703a2f2f3132372e302e302e313a353030302f6c75636b795f6e756d6265727329",
                              "id": 106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1304:43:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_20dc353e1010292d1d7734ad627dbe61185e2a5c5f7a247bb8b69def0ba4cfde",
                                "typeString": "literal_string \"json(http://127.0.0.1:5000/lucky_numbers)\""
                              },
                              "value": "json(http://127.0.0.1:5000/lucky_numbers)"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_20dc353e1010292d1d7734ad627dbe61185e2a5c5f7a247bb8b69def0ba4cfde",
                                "typeString": "literal_string \"json(http://127.0.0.1:5000/lucky_numbers)\""
                              }
                            ],
                            "id": 104,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1224,
                              1266,
                              1312,
                              1356,
                              1399,
                              1444,
                              1493,
                              1540,
                              1587,
                              1636,
                              1689,
                              1740,
                              1777,
                              1817,
                              1860,
                              1900,
                              1945,
                              1993,
                              2044,
                              2092,
                              2145,
                              2201,
                              2260,
                              2316,
                              2377,
                              2441,
                              2508,
                              2572,
                              2641,
                              2713,
                              2788,
                              2860,
                              2907,
                              2956,
                              3009,
                              3060,
                              3097,
                              3137,
                              3180,
                              3220,
                              3265,
                              3313,
                              3364,
                              3412,
                              3465,
                              3521,
                              3580,
                              3636,
                              3697,
                              3761,
                              3828,
                              3892,
                              3961,
                              4033,
                              4108,
                              4180
                            ],
                            "referencedDeclaration": 1224,
                            "src": "1282:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1282:66:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 108,
                        "nodeType": "ExpressionStatement",
                        "src": "1282:66:0"
                      }
                    ]
                  },
                  "id": 110,
                  "nodeType": "IfStatement",
                  "src": "1000:359:0",
                  "trueBody": {
                    "id": 99,
                    "nodeType": "Block",
                    "src": "1045:125:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 96,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1081:77:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bd8de690da694a5910a0f704ac9ce237e723b5eaad5960da1d2ac575f10c1b1c",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bd8de690da694a5910a0f704ac9ce237e723b5eaad5960da1d2ac575f10c1b1c",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 95,
                            "name": "newOraclizeQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23,
                            "src": "1064:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1064:95:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 98,
                        "nodeType": "EmitStatement",
                        "src": "1059:100:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 112,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "getWinningNumbers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "968:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "990:0:0"
            },
            "scope": 125,
            "src": "942:423:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "1424:86:0",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "476f74206f7261636c697a6520717565727920616e642063616c6c6261636b20697320657865637574656421",
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1456:46:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3bf438ffdbb9ca0bab1cb35d0089ffc87a4ae9dca760f089fe31756227cb9e3",
                          "typeString": "literal_string \"Got oraclize query and callback is executed!\""
                        },
                        "value": "Got oraclize query and callback is executed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c3bf438ffdbb9ca0bab1cb35d0089ffc87a4ae9dca760f089fe31756227cb9e3",
                          "typeString": "literal_string \"Got oraclize query and callback is executed!\""
                        }
                      ],
                      "id": 119,
                      "name": "gotOraclizeQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1439:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1439:64:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122,
                  "nodeType": "EmitStatement",
                  "src": "1434:69:0"
                }
              ]
            },
            "documentation": null,
            "id": 124,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "name": "myid",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1391:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1391:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1405:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1405:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1390:29:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1424:0:0"
            },
            "scope": 125,
            "src": "1371:139:0",
            "stateMutability": "nonpayable",
            "superFunction": 1124,
            "visibility": "public"
          }
        ],
        "scope": 126,
        "src": "56:1457:0"
      }
    ],
    "src": "0:1513:0"
  },
  "legacyAST": {
    "absolutePath": "/home/michal/git/lottery-smart-contract/LotteryContract/contracts/Lottery.sol",
    "exportedSymbols": {
      "Lottery": [
        125
      ]
    },
    "id": 126,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".22"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/home/michal/git/lottery-smart-contract/LotteryContract/contracts/usingOraclize.sol",
        "file": "./usingOraclize.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 126,
        "sourceUnit": 6232,
        "src": "25:29:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6231,
              "src": "76:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$6231",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "76:13:0"
          }
        ],
        "contractDependencies": [
          6231
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 125,
        "linearizedBaseContracts": [
          125,
          6231
        ],
        "name": "Lottery",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "better",
            "nodeType": "VariableDeclaration",
            "scope": 125,
            "src": "96:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "96:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8,
            "name": "winningNumbers",
            "nodeType": "VariableDeclaration",
            "scope": 125,
            "src": "123:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "123:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "Lottery.Better",
            "id": 13,
            "members": [
              {
                "constant": false,
                "id": 10,
                "name": "betterAddress",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "175:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "175:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "name": "bettedNumbers",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "206:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 11,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "206:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Better",
            "nodeType": "StructDefinition",
            "scope": 125,
            "src": "151:82:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16,
            "name": "betters",
            "nodeType": "VariableDeclaration",
            "scope": 125,
            "src": "239:16:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Better_$13_storage_$dyn_storage",
              "typeString": "struct Lottery.Better[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 14,
                "name": "Better",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 13,
                "src": "239:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Better_$13_storage_ptr",
                  "typeString": "struct Lottery.Better"
                }
              },
              "id": 15,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "239:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Better_$13_storage_$dyn_storage_ptr",
                "typeString": "struct Lottery.Better[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 19,
            "name": "winners",
            "nodeType": "VariableDeclaration",
            "scope": 125,
            "src": "261:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "261:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 18,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "261:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 23,
            "name": "newOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "308:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "308:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "307:20:0"
            },
            "src": "285:43:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 27,
            "name": "gotOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "356:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "356:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "355:20:0"
            },
            "src": "333:43:0"
          },
          {
            "body": {
              "id": 36,
              "nodeType": "Block",
              "src": "418:47:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 32,
                        "name": "_condition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "436:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 31,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6249,
                        6250
                      ],
                      "referencedDeclaration": 6249,
                      "src": "428:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "428:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "428:19:0"
                },
                {
                  "id": 35,
                  "nodeType": "PlaceholderStatement",
                  "src": "457:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 37,
            "name": "condition",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "name": "_condition",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "401:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "401:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "400:17:0"
            },
            "src": "382:83:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "490:88:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 40,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 890,
                      "src": "500:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$300",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307836663438354338424636666334336541323132453933424246386365303436433766316362343735",
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "528:42:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 41,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 300,
                        "src": "506:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$300_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 43,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "506:65:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$300",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "500:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$300",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "500:71:0"
                }
              ]
            },
            "documentation": null,
            "id": 47,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "Lottery",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "487:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "490:0:0"
            },
            "scope": 125,
            "src": "471:107:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 85,
              "nodeType": "Block",
              "src": "728:208:0",
              "statements": [
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62,
                      "name": "_currentBetter",
                      "nodeType": "VariableDeclaration",
                      "scope": 86,
                      "src": "738:29:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Better_$13_storage_ptr",
                        "typeString": "struct Lottery.Better"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 61,
                        "name": "Better",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 13,
                        "src": "738:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Better_$13_storage_ptr",
                          "typeString": "struct Lottery.Better"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 63,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "738:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 64,
                        "name": "_currentBetter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "777:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Better_$13_storage_ptr",
                          "typeString": "struct Lottery.Better storage pointer"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "betterAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "777:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 67,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6246,
                        "src": "808:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 68,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "808:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "777:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "777:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 71,
                        "name": "_currentBetter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "828:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Better_$13_storage_ptr",
                          "typeString": "struct Lottery.Better storage pointer"
                        }
                      },
                      "id": 73,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "bettedNumbers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "828:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 74,
                      "name": "_betNumbers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "859:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "828:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "828:42:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 80,
                        "name": "_currentBetter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "893:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Better_$13_storage_ptr",
                          "typeString": "struct Lottery.Better storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Better_$13_storage_ptr",
                          "typeString": "struct Lottery.Better storage pointer"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 77,
                        "name": "betters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "880:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Better_$13_storage_$dyn_storage",
                          "typeString": "struct Lottery.Better storage ref[] storage ref"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "880:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Better_$13_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Lottery.Better storage ref) returns (uint256)"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "880:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "880:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "925:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 60,
                  "id": 84,
                  "nodeType": "Return",
                  "src": "918:11:0"
                }
              ]
            },
            "documentation": null,
            "id": 86,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 52,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6246,
                        "src": "650:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "650:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "hexValue": "302e31",
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "664:9:0",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "id": 55,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "663:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      }
                    },
                    "src": "650:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 57,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 51,
                  "name": "condition",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 37,
                  "src": "640:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bool_$",
                    "typeString": "modifier (bool)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "640:35:0"
              }
            ],
            "name": "bet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "name": "_betNumbers",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "597:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "597:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "596:20:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "name": "succeeded",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "708:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "707:16:0"
            },
            "scope": 125,
            "src": "584:352:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "990:375:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1022:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 89,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1166,
                          1184
                        ],
                        "referencedDeclaration": 1166,
                        "src": "1004:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1004:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 92,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6269,
                        "src": "1031:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Lottery_$125",
                          "typeString": "contract Lottery"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1031:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1004:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 109,
                    "nodeType": "Block",
                    "src": "1176:183:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1212:55:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                                "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                                "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 100,
                            "name": "newOraclizeQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23,
                            "src": "1195:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1195:73:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 103,
                        "nodeType": "EmitStatement",
                        "src": "1190:78:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1297:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e28687474703a2f2f3132372e302e302e313a353030302f6c75636b795f6e756d6265727329",
                              "id": 106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1304:43:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_20dc353e1010292d1d7734ad627dbe61185e2a5c5f7a247bb8b69def0ba4cfde",
                                "typeString": "literal_string \"json(http://127.0.0.1:5000/lucky_numbers)\""
                              },
                              "value": "json(http://127.0.0.1:5000/lucky_numbers)"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_20dc353e1010292d1d7734ad627dbe61185e2a5c5f7a247bb8b69def0ba4cfde",
                                "typeString": "literal_string \"json(http://127.0.0.1:5000/lucky_numbers)\""
                              }
                            ],
                            "id": 104,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1224,
                              1266,
                              1312,
                              1356,
                              1399,
                              1444,
                              1493,
                              1540,
                              1587,
                              1636,
                              1689,
                              1740,
                              1777,
                              1817,
                              1860,
                              1900,
                              1945,
                              1993,
                              2044,
                              2092,
                              2145,
                              2201,
                              2260,
                              2316,
                              2377,
                              2441,
                              2508,
                              2572,
                              2641,
                              2713,
                              2788,
                              2860,
                              2907,
                              2956,
                              3009,
                              3060,
                              3097,
                              3137,
                              3180,
                              3220,
                              3265,
                              3313,
                              3364,
                              3412,
                              3465,
                              3521,
                              3580,
                              3636,
                              3697,
                              3761,
                              3828,
                              3892,
                              3961,
                              4033,
                              4108,
                              4180
                            ],
                            "referencedDeclaration": 1224,
                            "src": "1282:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1282:66:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 108,
                        "nodeType": "ExpressionStatement",
                        "src": "1282:66:0"
                      }
                    ]
                  },
                  "id": 110,
                  "nodeType": "IfStatement",
                  "src": "1000:359:0",
                  "trueBody": {
                    "id": 99,
                    "nodeType": "Block",
                    "src": "1045:125:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 96,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1081:77:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bd8de690da694a5910a0f704ac9ce237e723b5eaad5960da1d2ac575f10c1b1c",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bd8de690da694a5910a0f704ac9ce237e723b5eaad5960da1d2ac575f10c1b1c",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 95,
                            "name": "newOraclizeQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23,
                            "src": "1064:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1064:95:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 98,
                        "nodeType": "EmitStatement",
                        "src": "1059:100:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 112,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "getWinningNumbers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "968:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "990:0:0"
            },
            "scope": 125,
            "src": "942:423:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "1424:86:0",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "476f74206f7261636c697a6520717565727920616e642063616c6c6261636b20697320657865637574656421",
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1456:46:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3bf438ffdbb9ca0bab1cb35d0089ffc87a4ae9dca760f089fe31756227cb9e3",
                          "typeString": "literal_string \"Got oraclize query and callback is executed!\""
                        },
                        "value": "Got oraclize query and callback is executed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c3bf438ffdbb9ca0bab1cb35d0089ffc87a4ae9dca760f089fe31756227cb9e3",
                          "typeString": "literal_string \"Got oraclize query and callback is executed!\""
                        }
                      ],
                      "id": 119,
                      "name": "gotOraclizeQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1439:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1439:64:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122,
                  "nodeType": "EmitStatement",
                  "src": "1434:69:0"
                }
              ]
            },
            "documentation": null,
            "id": 124,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "name": "myid",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1391:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1391:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1405:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1405:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1390:29:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1424:0:0"
            },
            "scope": 125,
            "src": "1371:139:0",
            "stateMutability": "nonpayable",
            "superFunction": 1124,
            "visibility": "public"
          }
        ],
        "scope": 126,
        "src": "56:1457:0"
      }
    ],
    "src": "0:1513:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x46cb989ef9cef13e930e3b7f286225a086e716a90d63e0b7da85d310a9db0c9a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "description",
              "type": "string"
            }
          ],
          "name": "newOraclizeQuery",
          "type": "event",
          "signature": "0x46cb989ef9cef13e930e3b7f286225a086e716a90d63e0b7da85d310a9db0c9a"
        },
        "0xda2ceecbf0a68301143a220d1af7a2f12223ee02b6b00bbff5174e8069f6caa2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "description",
              "type": "string"
            }
          ],
          "name": "gotOraclizeQuery",
          "type": "event",
          "signature": "0xda2ceecbf0a68301143a220d1af7a2f12223ee02b6b00bbff5174e8069f6caa2"
        }
      },
      "links": {},
      "address": "0x74fb10375A071f353d9d7cc14892426eF0E7FdF4",
      "transactionHash": "0x1f738b5932abaa4cd5b2b0b3900f796e12bcf0e9bb7b3fc044c6c336ad2c7227"
    }
  },
  "schemaVersion": "3.0.13",
  "updatedAt": "2019-09-04T14:21:21.281Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}